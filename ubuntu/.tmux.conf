# author: XuTao <butbueatiful@gmail.com>  
# time: Sun Jul 15 21:57:17 CST 2012  
# Usage: mv tmux_conf.txt ~/.tmux.conf  
#------------------------------------------  
  
#-- base --#  
#set -g default-terminal "screen"  
set -g display-time 3000  
set -g history-limit 65535  
#----------------------------------------------  
  
#将默认按键前缀改为与C-j避免与终端快捷键冲突  
  
#按键绑定  
set -g prefix C-j
bind C-j send-prefix
  
#水平或垂直分割窗口 (C+A+ :split-window + v/h)  
unbind '"'  
bind - splitw -v #分割成上下两个窗口  
unbind %  
bind | splitw -h #分割成左右两个窗口  
#----------------------------------------------  
  
#选择分割的窗格  
bind k selectp -U #选择上窗格  
bind j selectp -D #选择下窗格  
bind h selectp -L #选择左窗格  
bind l selectp -R #选择右窗格  
#----------------------------------------------  
  
#重新调整窗格的大小  
bind ^k resizep -U 10  
bind ^j resizep -D 10  
bind ^h resizep -L 10  
bind ^l resizep -R 10  
#----------------------------------------------  
  
# VI-style copy/paste (http://jasonwryan.com/blog/2011/06/07/copy-and-paste-in-tmux/)
# unbind-key [
bind-key Escape copy-mode
unbind-key p
bind-key p paste-buffer
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-selection
bind-key -t vi-copy C-v rectangle-toggle

#交换两个窗格  
bind ^u swapp -U  
bind ^d swapp -D  
  
bind ^a last  
bind q killp  
#----------------------------------------------  
  
bind '~' splitw htop  
bind ! splitw ncmpcpp  
bind m command-prompt "splitw -h 'exec man %%'"  
  
unbind s  

unbind r
bind r source-file ~/.tmux.conf \; display "Configuration Reloaded!"
#----------------------------------------------  
  
#定制状态行  
  
set -g status-left "#[fg=white,bg=blue] > #I < #[default] |" # 0:bash  
#set -g status-left "#[fg=white,bg=blue] > #I < #[default] |" # session-name  
set -g status-right "#[fg=yellow,bold]#(ifconfig | grep -A1 wlan0 | tail -1 | awk '{print $2}' | awk -F: '{print $2}')#(ifconfig | grep -A1 eth0 | tail -1 | awk '{print "|"$2}' | awk -F: '{print $2}')#[fg=yellow,bright]#[default] #[fg=yellow,bright]- %Y.%m.%d #[fg=green]%H:%M #[default]"  
set -g status-right-attr bright  
  
set -g status-bg white
set -g status-fg black
set -g set-clipboard on  
  
 # 设置活动窗口的颜色
setw -g window-status-current-attr bright  
setw -g window-status-current-bg '#a57705'
setw -g window-status-current-fg white  

# 设置面板和活动面板的颜色
set -g pane-border-fg '#52676f'
set -g pane-border-bg '#a57705'

# 设置命令行或消息的颜色
set -g status-utf8 on  
set -g status-interval 1  
  
set -g visual-activity on  
setw -g monitor-activity on  

# pane border
set -g pane-active-border-fg '#a57705'
set -g pane-border-fg '#555555'

# message text
set -g message-fg white
set -g message-bg red

set -g status-keys vi  
#----------------------------------------------  
  
#setw -g mouse on
setw -g mode-keys vi  
setw -g mode-mouse on  
  
setw -g mouse-resize-pane on  
setw -g mouse-select-pane on  
setw -g mouse-select-window on  
  
# move x clipboard into tmux paste buffer  
bind C-p run "tmux set-buffer \"$(xclip -o -sel clipbaord)\"; tmux paste-buffer"  
# move tmux copy buffer into x clipboard  
bind C-y run "tmux show-buffer | xclip -i -sel clipbaord"  

#颜色不一致问题
set -g default-terminal "screen-256color"
set -sg escape-time 1

#默认启动应用  
#new -s work # 新建名为 work 的会话，并启动 mutt  
#neww rtorrent # 启动 rtorrent  
#neww vim # 启动 vim  
#neww zsh  
#selectw -t 3 # 默认选择标号为 3 的窗口  

# tmux-plugins/tmux-yank Mouse Support
set-option -g @shell_mode 'vi'

# List of plugins
set-option -g @plugin 'tmux-plugins/tpm'
set-option -g @plugin 'tmux-plugins/tmux-sensible'
set-option -g @plugin 'tmux-plugins/tmux-pain-control'
set-option -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set-option -g @plugin 'tmux-plugins/tmux-copycat'
set-option -g @plugin 'tmux-plugins/tmux-yank'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

# enable mouse wheel to scroll in tmux 2.1+(included)
set-option -g @plugin 'nhdaly/tmux-scroll-copy-mode'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

# 把日志输出到指定文件
bind P pipe-pane -o "cat >>~/#W.log" \; display "Toggled logging to ~/#W.log"

